package bindata_files

import (
	"path/filepath"
	"time"

	"ktkr.us/pkg/vfs/bindata"
)

func init() {
	bindata.RegisterFile(filepath.Join("templates", "errors.tmpl"), time.Unix(1488177295, 0), []byte("{{ define \"404\" }}\n<h1>\"{{ $.G.URL.Path }}\" doesn't exist</h1>\n{{ end }}\n\n{{ define \"500\" }}\n<h1>Failed to open \"{{ $.G.URL.Path }}\"</h1>\n<p>{{ .Data }}</p>\n{{ end }}\n"))
	bindata.RegisterFile(filepath.Join("templates", "index.tmpl"), time.Unix(1492666731, 0), []byte("{{ define \"index\" }}\n{{- with $.Data }}\n{{- with .Components }}\n<nav><ul class=\"crumbs\">{{ range . }}<li><a href=\"{{ .Path }}\">{{ .Name }}</a></li>{{ end }}</ul></nav>\n{{- end }}\n<table id=\"files\">\n  <thead>\n    <tr>\n      <th class=\"n{{ if eq .SortCol \"n\" }} sort{{ if .SortRev }} rev{{ end }}{{ end }}\">\n        <a href=\"{{ $.G.URL.Path }}?s=n{{ if eq .SortCol \"n\" }}{{ if not .SortRev }}&r=1{{ end }}{{ end }}\">Name</a>\n      </th>\n      <th class=\"s{{ if eq .SortCol \"s\" }} sort{{ if .SortRev }} rev{{ end }}{{ end }}\">\n        <a href=\"{{ $.G.URL.Path }}?s=s{{ if eq .SortCol \"s\" }}{{ if not .SortRev }}&r=1{{ end }}{{ end }}\">Size</a>\n      </th>\n      <th class=\"m{{ if eq .SortCol \"m\" }} sort{{ if .SortRev }} rev{{ end }}{{ end }}\">\n        <a href=\"{{ $.G.URL.Path }}?s=m{{ if eq .SortCol \"m\" }}{{ if not .SortRev }}&r=1{{ end }}{{ end }}\">Modified</a>\n      </th>\n      {{- if $.Data.Config.FileListShowModes }}\n      <th class=\"p\">Mode</th>\n      {{- end }}\n    </tr>\n  </thead>\n  <tbody>\n    {{- if len $.Data.Components | lt 1 }}\n    <tr class=\"up\">\n      <td class=\"n\"><a href=\"{{ $.Data.UpDir }}\">..</a></td>\n    </tr>\n    {{- end }}\n    {{- range .Entries }}\n    <tr class=\"{{ if .IsDir }}d{{ else }}f{{ end }}{{ if .IsLink }} l{{ end }}\">\n      <td class=\"n\"><div><a href=\"{{ .Path }}\">{{ .Name }}</a></div></td>\n      <td class=\"s\">{{ if .IsDir }}{{ .NumEntries }} {{ if eq .NumEntries 1 }}file{{ else }}files{{ end }}{{ else }}{{ .Size }}{{ end }}</td>\n      <td class=\"m\"><time>{{ .Mod.Format \"2006-01-02 15:04\" }}</time></td>\n      {{- if $.Data.Config.FileListShowModes }}\n      <td class=\"p\">{{ .FileMode }}</td>\n      {{- end }}\n    </tr>\n    {{- end }}\n  </tbody>\n</table>\n{{- if .Gallery }}\n<section class=\"gallery\">\n  {{- template \"nav\" $ }}\n  <section class=\"gallery-items\">\n    {{- range .ImageFiles }}\n    <figure>\n      <a href=\"{{ .Path }}\"><img src=\"{{ .Path }}?t=1\" alt=\"{{ .Name }}\"></a>\n      <figcaption>{{ .Name }} <span class=\"s\">({{ .Size }})</span></figcaption>\n    </figure>\n    {{- end }}{{/* range .ImageFiles */}}\n  </section>\n  {{- template \"nav\" $ }}\n</section>\n{{- end }}{{/* if .Gallery */}}\n<aside id=\"total\">\n  {{ len .Entries }} file{{ if len .Entries | ne 1 }}s{{ end }}\n  {{- if $.Data.Config.ZipFolderEnable }}\n    | <a href=\"?zip=1\">Download as zip</a>\n    {{ if $.Data.Config.ZipFolderEnableRecursive -}}\n    (<a href=\"?zip=1&rec=1\">recursively</a>)\n    {{- end -}}\n  {{- end }}\n</aside>\n{{ if .Readme }}\n<article>\n  {{- if .PlainReadme }}\n  <pre class=\"readme\">{{ string .Readme }}</pre>\n  {{- else }}\n  {{ markdown .Readme }}\n  {{- end }}\n</article>\n{{- end }}\n{{- end }}\n{{ end }}\n\n{{ define \"nav\" }}\n{{- with .Data }}\n  <nav class=\"gallery-pagination\">\n    {{- if gt .GalleryPage 1 -}}\n    <a href=\"{{ $.G.URL.Path }}?p={{ .PrevPage }}\">\xe2\x86\x90</a>\n    {{- else -}}\n    <span style=\"visibility: hidden\">\xe2\x86\x90</span>\n    {{- end -}}\n    {{ .GalleryPage }} &#xff0f; {{ .GalleryPages }}\n    {{- if lt .GalleryPage .GalleryPages -}}\n    <a href=\"{{ $.G.URL.Path }}?p={{ .NextPage }}\">\xe2\x86\x92</a>\n    {{- else -}}\n    <span style=\"visibility: hidden\">\xe2\x86\x92</span>\n    {{- end -}}\n  </nav>\n{{ end }}\n{{ end }}\n"))
	bindata.RegisterFile(filepath.Join("templates", "layout.tmpl"), time.Unix(1488177293, 0), []byte("{{ define \"layout\" }}<!doctype html>\n<html>\n  <head>\n    <title>{{ $.G.URL.Path }}</title>\n    <base href=\"//{{ .G.Host }}{{ $.G.URL.Path }}\">\n    <link rel=\"stylesheet\" href=\"/static/i.css\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  </head>\n  <body>\n    <section id=\"main\">\n      {{ $.Content }}\n    </section>\n  </body>\n</html>\n{{ end }}\n"))
}
